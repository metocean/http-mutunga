// Generated by CoffeeScript 1.9.2
var http;

http = require('http');

module.exports = function(requestListener) {
  var _nextId, connections, destroyIfIdle, emitIfEmpty, isAcceptingNewRequests, origClose, server, trackConnection;
  _nextId = 1;
  isAcceptingNewRequests = true;
  connections = {};
  server = http.createServer(requestListener);
  destroyIfIdle = function(connection) {
    if (isAcceptingNewRequests) {
      return;
    }
    if (!connection.isIdle) {
      return;
    }
    return connection.destroy();
  };
  emitIfEmpty = function() {
    if (isAcceptingNewRequests) {
      return;
    }
    if (Object.keys(connections).length === 0) {
      return server.emit('empty');
    }
  };
  trackConnection = function(connection) {
    if (connection.id != null) {
      return connection;
    }
    connection.id = _nextId++;
    connection.isIdle = true;
    connections[connection.id] = connection;
    return connection.on('close', function() {
      delete connections[connection.id];
      return emitIfEmpty();
    });
  };
  server.on('connection', trackConnection);
  server.on('request', function(req, res) {
    var connection;
    connection = trackConnection(req.socket);
    connection.isIdle = false;
    return res.on('finish', function() {
      connection.isIdle = true;
      return destroyIfIdle(connection);
    });
  });
  origClose = server.close;
  server.close = function(cb) {
    var _, connection, res;
    res = origClose.apply(server, [cb]);
    if (isAcceptingNewRequests) {
      isAcceptingNewRequests = false;
      for (_ in connections) {
        connection = connections[_];
        destroyIfIdle(connection);
      }
      emitIfEmpty();
    }
    return res;
  };
  return server;
};
